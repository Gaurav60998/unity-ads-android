import com.android.ddmlib.DdmPreferences

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply from: '../fatAar.gradle'
apply from: '../dokka.gradle'

Properties properties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}

ext {
  GROUP_ID = "com.unity3d.ads"
  ARTIFACT_ID = "unity-ads"
  VERSION_ID = "4.6.1"
  VERSION_CODE = 4610
  SIGN_AAR = properties.getProperty("SIGN_AAR") ?: false
}

android {
  namespace = GROUP_ID
  compileSdkVersion 32
  DdmPreferences.setLogLevel("verbose")
  DdmPreferences.setTimeOut(10 * 60000)

  lintOptions {
    abortOnError false
  }

  defaultConfig {
    targetSdkVersion 32
    minSdkVersion 19
    versionCode = VERSION_CODE
    versionName = VERSION_ID
    gradle.startParameter.taskNames.each {
      if (it.contains("AndroidTest")) {
          minSdkVersion 26
      }
    }
    setProperty("archivesBaseName", "unity-ads")

    buildConfigField('String', 'WEBVIEW_BRANCH', getPropertyStringWithDefaultValue('WEBVIEW_BRANCH', '"' + versionName + '"'))
    buildConfigField('int', 'VERSION_CODE', "$versionCode")
    buildConfigField('String', 'VERSION_NAME', "\"$versionName\"")
    testBuildType "debug"
    multiDexEnabled true

    testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    testInstrumentationRunnerArguments disableAnalytics: 'true' // Won't work yet, see: https://code.google.com/p/android/issues/detail?id=188241
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
      if (it.name.contains("UnitTest")) {
          sourceCompatibility = JavaVersion.VERSION_1_8
          targetCompatibility = JavaVersion.VERSION_1_8
          kotlinOptions {
              jvmTarget = "1.8"
          }
      } else {
          sourceCompatibility = JavaVersion.VERSION_1_6
          targetCompatibility = JavaVersion.VERSION_1_6
          kotlinOptions {
              jvmTarget = "1.6"
          }
      }
      kotlinOptions {
          apiVersion = "1.4"
          languageVersion = "1.4"
          freeCompilerArgs = freeCompilerArgs + "-Xopt-in=kotlin.RequiresOptIn" + "-Xallow-result-return-type"
      }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt')
      consumerProguardFiles 'proguard-rules.pro'
    }
    debug {
      minifyEnabled false
      testCoverageEnabled true
      consumerProguardFiles 'proguard-rules.pro'
    }
  }
}

dependencies {
    debugImplementation fileTree(dir: 'libs/Debug', include: ['*.jar'])
    releaseImplementation fileTree(dir: 'libs/Release', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "androidx.startup:startup-runtime:$startup_runtime_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    implementation "com.unity3d.services.identifiers:unity-services-identifiers:$unity_identifiers_version"
    androidTestCompileOnly project(':unity-scaradapter-2100')
    androidTestCompileOnly project(':unity-scaradapter-2000')
    androidTestCompileOnly project(':unity-scaradapter-1950')
    androidTestCompileOnly project(':unity-scaradapter-1920')
    androidTestCompileOnly project(':unity-scaradapter-common')
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'org.mockito:mockito-core:2.28.2'
    androidTestImplementation 'org.mockito:mockito-android:2.25.0'
    // A bug in Mockito requires us to add this until an update in released
    androidTestImplementation 'org.opentest4j:opentest4j:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'com.google.android.gms:play-services-ads:21.4.0'
    androidTestImplementation 'com.android.billingclient:billing:4.0.0'
    compileOnly 'com.google.ar:core:1.0.0'
    compileOnly project(':unity-scaradapter-2100')
    compileOnly project(':unity-scaradapter-2000')
    compileOnly project(':unity-scaradapter-1950')
    compileOnly project(':unity-scaradapter-1920')
    compileOnly project(':unity-scaradapter-common')
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation 'com.android.billingclient:billing:4.0.0'
    testImplementation "io.mockk:mockk:1.11.0"
    testImplementation 'org.json:json:20180813'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.2'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.2'
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    archiveBaseName.set("${archivesBaseName}")
    from android.sourceSets.main.java.srcDirs
}

task androidJavadocsJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set("javadoc")
    archiveBaseName.set("${archivesBaseName}")
    from "$rootDir/../javadoc/"
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

def getPropertyStringWithDefaultValue(String key, String defaultValue) {
  def value = project.getProperties().get(key)
  // Ensure that string is quoted
  if ((value != null) && (!(value ==~ /^".*"$/)) ){
    println "Value for key '$key' is not quoted, adding quotes to '$value'"
    value = "\"$value\""
  }
  return value != null ? value : defaultValue
}

apply from: 'publishing.gradle'
apply from: 'artifactory.gradle'
apply from: 'jacoco.gradle'